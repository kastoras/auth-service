definitions:
  actions.HealthRes:
    properties:
      admin-token:
        type: string
      cache-status:
        type: string
      server-status:
        type: string
      version:
        type: string
    type: object
  login.LoginPayload:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  login.LoginResp:
    properties:
      access_token:
        type: string
    type: object
  master_groups.RealmGroup:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  master_groups.Response:
    properties:
      groups:
        items:
          $ref: '#/definitions/master_groups.RealmGroup'
        type: array
    type: object
info:
  contact: {}
paths:
  /groups:
    get:
      consumes:
      - application/json
      description: Returns the groups a user can be assigned
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/master_groups.Response'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Return application user groups
      tags:
      - managment
  /health:
    get:
      description: Check's the health of the api and all its components
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/actions.HealthRes'
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Checks the health of the API
      tags:
      - information
  /login:
    post:
      consumes:
      - application/json
      description: Creates an jwt token for the credentials provided
      parameters:
      - description: Login Credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login.LoginPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/login.LoginResp'
        "400":
          description: Bad Request
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Creates an authorization token
      tags:
      - authentication
  /token:
    post:
      description: Check if Authentication Bearer token is active
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: object
        "404":
          description: Not Found
          schema:
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: object
      summary: Checks if token is valid
      tags:
      - authentication
swagger: "2.0"
